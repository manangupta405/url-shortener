version: '3.8'
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: url-shortener-postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d 

  # Redis Database
  redis:
    image: redis:7
    container_name: url-shortener-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
  # URL Shortener API
  url-shortener:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: url-shortener-api
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/var/log/url-shortener
  # Cronjob for cleaning expired URLs
  url-cleaner:
    build:
      context: ./cron
      dockerfile: Dockerfile
    container_name: url-shortener-cron
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/data/loki
      - ./observability/loki-config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - ./observability/promtail-config.yaml:/etc/promtail/config.yaml 
      - ./logs:/var/log/url-shortener
      - promtail_positions:/var/lib/promtail
    depends_on:
      - loki
    command: -config.file=/etc/promtail/config.yaml
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"  # not for production
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin #  not for production
    depends_on:
      - loki
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./observability/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
volumes:
  postgres_data:
  redis_data:
  loki_data:
  promtail_positions:
  grafana_data:
  observability: